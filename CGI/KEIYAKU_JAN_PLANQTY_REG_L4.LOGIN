#!/bin/bash -xv
#
#KEIYAKU_JAN_PLANQTY_REG_L4.LOGIN>>> 契約数情報登録
# Usage : KEIYAKU_JAN_PLANQTY_REG_L4.LOGIN
#
# Written by Li.dan(TRE・CHINA)  /Date : 19 Jan. 2019
# ALter Gao.changshui(TRE・CHINA)  /Date : 14 Aug. 2019

#/////////////////////////////////////////////////////////////////////////
# 初期設定
#/////////////////////////////////////////////////////////////////////////

# 環境変数設定
export PATH=/home/SMART:/home/SMART_TRIAL:/usr/local/bin:${PATH}
export LANG=ja_JP.UTF-8

## ログディレクトリの定義
cgishld=/home/trial/AP/SOFT_CHOUHYOU
logd=${cgishld}/LOG

##走行ログの記録
echo "${logd}/LOG.$(basename $0).$(date +%Y%m%d)_$(date +%H%M%S)_$$" &>/dev/null
exec 2>${logd}/LOG.$(basename $0).$(date +%Y%m%d)_$(date +%H%M%S)_$$

# ディレクトリ定義
dir=/home/trial
lv4d=${dir}/APDATA/SOFT_CHOUHYOU/POMPA

tmp=/tmp/$$-$(basename $0)_$(date +%Y%m%d)_$(date +%H%M%S)
stime=$(date +%Y%m%d%H%M%S)
sday=$(date +%Y%m%d)

# エラー時の終了処理定義
ERROR_EXIT(){
  exit 1
}

[ $# -eq 3 ] || ERROR_EXIT

usercd=$1
datafile=$2
kikan=$3

#年ID
# year=$(awk '$1=="'${kikan}'"{print $3}' ${lv4d}/KISETU/MASTER/COMMON/MST_KIKAN)
year=$(date +%Y)

#AW/SS取得
kisetuid=$(awk '$1=="'${kikan}'"{print $4}' ${lv4d}/KISETU/MASTER/COMMON/MST_KIKAN)
kisetuname=$(awk '$1=="'${kikan}'"{print $4=="1"?"SS":"AW"}' ${lv4d}/KISETU/MASTER/COMMON/MST_KIKAN)

mkdir -p ${lv4d}/KISETU/DATA/${kisetuname}/${year}
[ $? -eq 0 ] || ERROR_EXIT

#修正契約数
touch ${lv4d}/KISETU/DATA/${kisetuname}/${year}/QTY_MINTE_KEIYAKU
[ $? -eq 0 ] || ERROR_EXIT

#昨年契約残
touch ${lv4d}/KISETU/DATA/${kisetuname}/${year}/QTY_SAKUYEAR_KEIYAKUZAN
[ $? -eq 0 ] || ERROR_EXIT

#初期売価
touch ${lv4d}/KISETU/DATA/${kisetuname}/${year}/QTY_SYODAN_SYOKIBAIKA
[ $? -eq 0 ] || ERROR_EXIT

#修正契約数対応
# 1:JAN 2:更新契約数3.昨年契約残
fmtfixed -w20 -c1 ${datafile}                                    |       
# 1:JAN 2:更新契約数 3.昨年契約残 4.初期売価
ssort -k1                                                        > $tmp-inputdata
[ $(errchk ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT

hejoin -v -k2 <(echo "_") $tmp-inputdata                         |
# 1:JAN 2:更新契約数 3.昨年契約残 4.初期売価
selcol -c1,2                                                     |
# 1:JAN 2:更新契約数
fmtfloat -c2                                                     |
ssort -k1                                                        |
tee $tmp-keiyakusu                                               |
# 1:JAN 2:更新契約数
hejoin -a -k1 - ${lv4d}/KISETU/DATA/${kisetuname}/${year}/QTY_MINTE_KEIYAKU 1> $tmp-update_data_one 2>$tmp-origin_data  
# 1:JAN 2:契約数 3:登録者 4:登録日時 5:更新者 6:更新日時         
[ $(errchk ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT

hijoin -a -k1 $tmp-update_data_one $tmp-keiyakusu  1>$tmp-updata_data_two  2>$tmp-new_data_one 
# $tmp-updata_data_two 1:JAN 2:旧契約数 3:登録者 4:登録日時 5:更新者 6:更新日時 7:新契約数
# $tmp-new_data_one    1:JAN 2:更新契約数
[ $(errchk ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT

crossjoin $tmp-new_data_one <(echo ${usercd} ${stime} ${usercd} ${stime}) >$tmp-new_data 
# 1:JAN 2:更新契約数 3:登録者 4:登録日時 5:更新者 6:更新日時 
[ $? -eq 0 ] || ERROR_EXIT

selcol -c1 -c7 -c3,4 $tmp-updata_data_two                             |
# 1:JAN 2:更新契約数  3:登録者 4:登録日時
crossjoin - <(echo ${usercd} ${stime})                                |
# 1:JAN 2:更新契約数  3:登録者 4:登録日時 5:更新者 6:更新日時
cat - $tmp-origin_data                                                |
# 1:JAN 2:契約数  3:登録者 4:登録日時 5:更新者 6:更新日時
cat - $tmp-new_data                                                   |
# 1:JAN 2:契約数  3:登録者 4:登録日時 5:更新者 6:更新日時
hejoin -v -k1 <(awk '$2=="_"' $tmp-inputdata|kuniq -k1)               |
ssort -k1                                                             >$tmp-keiyaku_update
# 1:JAN 2:契約数 3:登録者 4:登録日時 5:更新者 6:更新日時
[ $(errchk ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT

#昨年契約残
hejoin -v -k3 <(echo "_") $tmp-inputdata                              |
# 1:JAN 2:更新契約数 3.昨年契約残 
selcol -c1 -c3                                                        |
# 1:JAN 2:昨年契約残
fmtfloat -c2                                                          |
ssort -k1                                                             |
tee $tmp-keiyakuzan                                                   |
# 1:JAN 2:昨年契約残
hejoin -a -k1 - ${lv4d}/KISETU/DATA/${kisetuname}/${year}/QTY_SAKUYEAR_KEIYAKUZAN 1> $tmp-update_data_one_zan 2>$tmp-origin_data_zan  
# 1:JAN 2:昨年契約残 3:登録者 4:登録日時 5:更新者 6:更新日時         
[ $(errchk ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT

hijoin -a -k1 $tmp-update_data_one_zan $tmp-keiyakuzan  1>$tmp-updata_data_two_zan  2>$tmp-new_data_one_zan 
# $tmp-updata_data_two 1:JAN 2:旧昨年契約残 3:登録者 4:登録日時 5:更新者 6:更新日時 7:新昨年契約残
# $tmp-new_data_one    1:JAN 2:更新昨年契約残
[ $(errchk ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT

crossjoin $tmp-new_data_one_zan <(echo ${usercd} ${stime} ${usercd} ${stime}) >$tmp-new_data_zan 
# 1:JAN 2:更新契約数 3:登録者 4:登録日時 5:更新者 6:更新日時 
[ $? -eq 0 ] || ERROR_EXIT

selcol -c1 -c7 -c3,4 $tmp-updata_data_two_zan                         |
# 1:JAN 2:更新契約残  3:登録者 4:登録日時
crossjoin - <(echo ${usercd} ${stime})                                |
# 1:JAN 2:更新契約残  3:登録者 4:登録日時 5:更新者 6:更新日時
cat - $tmp-origin_data_zan                                            |
# 1:JAN 2:昨年契約残  3:登録者 4:登録日時 5:更新者 6:更新日時
cat - $tmp-new_data_zan                                               |
# 1:JAN 2:昨年契約残  3:登録者 4:登録日時 5:更新者 6:更新日時
hejoin -v -k1 <(awk '$3=="_"' $tmp-inputdata|kuniq -k1)               |
ssort -k1                                                             >$tmp-keiyaku_update_zan
# 1:JAN 2:昨年契約残 3:登録者 4:登録日時 5:更新者 6:更新日時
[ $(errchk ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT

#初期売価
hejoin -v -k4 <(echo "_") $tmp-inputdata                         |
# 1:JAN 2:更新契約数 3.昨年契約残 4.初期売価
selcol -c1 -c4                                                   |
# 1:JAN 2:初期売価
fmtfloat -c2                                                     |
ssort -k1                                                        |
tee $tmp-keiyaprice                                              |
# 1:JAN 2:初期売価
hejoin -a -k1 - ${lv4d}/KISETU/DATA/${kisetuname}/${year}/QTY_SYODAN_SYOKIBAIKA 1> $tmp-update_data_one_price 2>$tmp-origin_data_price 
# 1:JAN 2:初期売価 3:登録者 4:登録日時 5:更新者 6:更新日時         
[ $(errchk ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT

hijoin -a -k1 $tmp-update_data_one_price $tmp-keiyaprice  1>$tmp-updata_data_two_price  2>$tmp-new_data_one_price 
# $tmp-updata_data_two 1:JAN 2:旧初期売価 3:登録者 4:登録日時 5:更新者 6:更新日時 7:新初期売価
# $tmp-new_data_one    1:JAN 2:初期売価
[ $(errchk ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT

crossjoin $tmp-new_data_one_price <(echo ${usercd} ${stime} ${usercd} ${stime}) >$tmp-new_data_price 
# 1:JAN 2:新初期売価 3:登録者 4:登録日時 5:更新者 6:更新日時 
[ $? -eq 0 ] || ERROR_EXIT

selcol -c1 -c7 -c3,4 $tmp-updata_data_two_price                       |
# 1:JAN 2:新初期売価  3:登録者 4:登録日時
crossjoin - <(echo ${usercd} ${stime})                                |
# 1:JAN 2:新初期売価  3:登録者 4:登録日時 5:更新者 6:更新日時
cat - $tmp-origin_data_price                                          |
# 1:JAN 2:新初期売価  3:登録者 4:登録日時 5:更新者 6:更新日時
cat - $tmp-new_data_price                                             |
# 1:JAN 2:新初期売価  3:登録者 4:登録日時 5:更新者 6:更新日時
hejoin -v -k1 <(awk '$4=="_"' $tmp-inputdata|kuniq -k1)               |
ssort -k1                                                             >$tmp-keiyaku_update_price
# 1:JAN 2:新初期売価 3:登録者 4:登録日時 5:更新者 6:更新日時
[ $(errchk ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT

# 履歴保存
hisd=${lv4d}/HISTORY/${usercd}/${sday}
mkdir -p ${hisd}
[ $? -eq 0 ] || ERROR_EXIT

cp ${lv4d}/KISETU/DATA/${kisetuname}/${year}/QTY_MINTE_KEIYAKU ${hisd}/QTY_MINTE_KEIYAKU_${stime}
[ $? -eq 0 ] || ERROR_EXIT
cp ${lv4d}/KISETU/DATA/${kisetuname}/${year}/QTY_SAKUYEAR_KEIYAKUZAN ${hisd}/QTY_SAKUYEAR_KEIYAKUZAN_${stime}
[ $? -eq 0 ] || ERROR_EXIT

#最新ファイル作成
cat $tmp-keiyaku_update    >${lv4d}/KISETU/DATA/${kisetuname}/${year}/QTY_MINTE_KEIYAKU
[ $? -eq 0 ] || ERROR_EXIT

#契約残更新
cat $tmp-keiyaku_update_zan > ${lv4d}/KISETU/DATA/${kisetuname}/${year}/QTY_SAKUYEAR_KEIYAKUZAN
[ $? -eq 0 ] || ERROR_EXIT

#初期売価更新
cat $tmp-keiyaku_update_price > ${lv4d}/KISETU/DATA/${kisetuname}/${year}/QTY_SYODAN_SYOKIBAIKA
[ $? -eq 0 ] || ERROR_EXIT

#/////////////////////////////////////////////////////////////////////////
# 終了部分
#/////////////////////////////////////////////////////////////////////////

# 終了

rm -rf $tmp-*

exit 0
