#!/bin/bash -xv
#
# CHOUHYOU_CATEGORY_EXCEL_FORMAT.SEARCH>>>カテゴリ別店舗別データ画面EXCEL出力
# Usage : CHOUHYOU_CATEGORY_EXCEL_FORMAT.SEARCH
#
# Written by Tan.zhihui(TRE・CHINA) / Date : 10 Sep. 2019


#/////////////////////////////////////////////////////////////////////////
# 初期設定
#/////////////////////////////////////////////////////////////////////////

# 環境変数設定
export PATH=/home/SMART:/home/SMART_TRIAL:/usr/local/bin:${PATH}
export LANG=ja_JP.UTF-8

## ログディレクトリの定義
cgishld=/home/trial/AP/SOFT_CHOUHYOU
logd=${cgishld}/LOG

##走行ログの記録
echo "${logd}/LOG.$(basename $0).$(date +%Y%m%d)_$(date +%H%M%S)_$$" &>/dev/null
exec 2>${logd}/LOG.$(basename $0).$(date +%Y%m%d)_$(date +%H%M%S)_$$

# ディレクトリ定義
formatd=${cgishld}/EXCEL_FORMAT
sday=$(date +%Y%m%d)
lv4d=/home/trial/APDATA/SOFT_CHOUHYOU/POMPA
dwnd=/home/trial/AP/SOFT_CHOUHYOU/DOWNLOAD/${sday}
hostip=$(readvalue -uEXCEL_OUT ${lv4d}/TBL/IP_CONFIG)
expass=http://${hostip}/~trial/SOFT_CHOUHYOU/DOWNLOAD/${sday}
# 引数の確認
[ $# -ne 3 ] && exit 1

# 1.Inputファイル
tmp=$1-$(basename $0)_$$
usercd=$2
paramfile=$3

out_headname=$(awk '$1=="out_1"{print $2}' ${paramfile})       #データヘッダー名（最後の行）
out_colname=$(awk '$1=="out_2"{print $2}' ${paramfile})        #データ列名 
out_groupheaders=$(awk '$1=="out_3"{print $2}' ${paramfile})   #データヘッダー情報（最後の行以外）
out_info=$(awk '$1=="out_4"{print $2}' ${paramfile})           #データ明細
out_color=$(awk '$1=="out_5"{print $2}' ${paramfile})          #バックグラウンド色
zipname="カテゴリ別店別"_${sday}_${usercd}.zip

# エラー時の終了処理定義
ERROR_EXIT(){
  exit 1
}

#/////////////////////////////////////////////////////////////////////////
# 処理部分
#/////////////////////////////////////////////////////////////////////////

mkdir -p ${formatd}
[ $? -eq 0 ] || ERROR_EXIT

:> $tmp-script
filename="カテゴリ別店別"_$(date +%Y%m%d)_$(date +%H%M%S)

mkdir -p $tmp/outfile
[ $? -eq 0 ] || ERROR_EXIT

:> $tmp-script

tail -n +2 ${out_groupheaders} |
delcol -c1,4                   >$tmp-out_groupheaders
[ $(errchk ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT
tail -n +2 ${out_info}         >$tmp-out_info
[ $? -eq 0 ] || ERROR_EXIT
tail -n +2 ${out_color}         >$tmp-out_color
[ $? -eq 0 ] || ERROR_EXIT


data_colc=$(colc ${out_colname})
totalcnt=$(rowc $tmp-out_groupheaders)
datacnt=$(rowc $tmp-out_info) 
#もしdata_colc長きだいなり15
if [ ${data_colc} -gt 13 ];then

  #挿入データ
  echo FILLDATA 1 F2 $tmp-out_groupheaders               >> $tmp-script
  echo FILLDATA 1 B$[${totalcnt}+2] ${out_headname}      >> $tmp-script
  echo FILLDATA 1 B$[${totalcnt}+3] $tmp-out_info        >> $tmp-script
  #表頭の空白
  echo COPYSTYLE 1 H1 2,2:$[${totalcnt}+1],2                >> $tmp-script
  echo COPYSTYLE 1 I1 2,3:$[${totalcnt}+1],4                >> $tmp-script
  echo COPYSTYLE 1 J1 2,5:$[${totalcnt}+1],5                >> $tmp-script
  #バックグラウンド色
  echo COPYSTYLE 1 B1 $[${totalcnt}+2],2:$[${totalcnt}+2],$[${data_colc}+1]   >> $tmp-script
  cat $tmp-out_color    |
  awk -v totalcnt=${totalcnt} 'BEGIN{str=""}
   {
    str="";
    if($5=="#FFF2CC"){
      str="COPYSTYLE 1 M1 "
    }else if($5=="#FFE699"){
      str="COPYSTYLE 1 N1 "
    }else if($5=="#A9D08E"){
      str="COPYSTYLE 1 O1 "
    }else{
      str="COPYSTYLE 1 P1 "
    }
    print str totalcnt+3+$1 "," $2+2 ":" totalcnt+3+$3 "," $4+2
  }'                   >> $tmp-script
  [ $(errchk ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT
fi

#千分位
echo COPYSTYLE 1 Q1 2,7:$[${totalcnt}+1],$[${data_colc}+1]                  >> $tmp-script
echo COPYSTYLE 1 Q1 $[${totalcnt}+3],7:$[${totalcnt}+3+${datacnt}],9        >> $tmp-script
echo COPYSTYLE 1 Q1 $[${totalcnt}+3],12:$[${totalcnt}+3+${datacnt}],14      >> $tmp-script

echo COPYSTYLE 1 R1 2,10:$[${totalcnt}+1],11                                >> $tmp-script
echo COPYSTYLE 1 R1 $[${totalcnt}+3],10:$[${totalcnt}+3+${datacnt}],11      >> $tmp-script
# EXCEL作成
mkExcel -t${formatd}/KATEGORITEN_FORMAT.xlsx -o$tmp/outfile/${filename}.xlsx -S$tmp-script
[ $? -eq 0 ] || ERROR_EXIT

mkdir -p ${dwnd}_${usercd}
[ $? -eq 0 ] || ERROR_EXIT

rm -rf ${dwnd}_${usercd}/${zipname}
[ $? -eq 0 ] || ERROR_EXIT

echo $tmp/outfile/*    |
tov                    |
sed 's/\\/\\\\/g'      |
while read xlsname ; do
  a=$(nkf -sxLw <(echo $xlsname))
  [ $? -eq 0 ] || ERROR_EXIT

  b=$(echo $a  |awk '{print length($1)-1}')
  [ $? -eq 0 ] || ERROR_EXIT
  cp $xlsname ${a:0:$b}

  zip -jgq ${dwnd}_${usercd}/${zipname} ${a:0:$b}
  [ $? -eq 0 ] || ERROR_EXIT
: ; done
[ $(errchk ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT

excelurl=${expass}_${usercd}/${zipname}

echo ${excelurl}

#/////////////////////////////////////////////////////////////////////////
# 終了部分
#/////////////////////////////////////////////////////////////////////////
# 終了

exit 0
