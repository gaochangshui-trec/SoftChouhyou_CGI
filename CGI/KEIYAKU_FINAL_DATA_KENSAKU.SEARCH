#!/bin/bash -xv
#
# KEIYAKU_FINAL_DATA_KENSAKU.SEARCH >>> 季節画面データ検索
# Usage : KEIYAKU_FINAL_DATA_KENSAKU.SEARCH
#
# Written by Tan.zhihui(TRE・CHINA) / Date : 23 Aug. 2019

#/////////////////////////////////////////////////////////////////////////
# 初期設定
#/////////////////////////////////////////////////////////////////////////

# 環境変数設定
export PATH=/home/SMART:/home/SMART_TRIAL:/usr/local/bin:${PATH}
export LANG=ja_JP.UTF-8

## ログディレクトリの定義
cgishld=/home/trial/AP/SOFT_CHOUHYOU
logd=${cgishld}/LOG

##走行ログの記録
echo "${logd}/LOG.$(basename $0).$(date +%Y%m%d)_$(date +%H%M%S)_$$" &>/dev/null
exec 2>${logd}/LOG.$(basename $0).$(date +%Y%m%d)_$(date +%H%M%S)_$$

# ディレクトリ定義
tmp=/tmp/$$-$(basename $0)_$(date +%Y%m%d)_$(date +%H%M%S)
lv4d=/home/trial/APDATA/SOFT_CHOUHYOU/POMPA
tbld=/SKCWEB/TBL

# 変数チェック
[ $# -ne 10 ] && exit 1 

kikan=$1       #期間ID
janfile=$2     #JANファイル           
kisetufile=$3  #季節ID
stodansya=$4   #商談者ID
colname=$5     #データ列名
headname=$6    #帳票ヘッダー
merge_text=$7  #複数ヘッダー内容
bgcolor=$8     #カラー
centerhead=$9
textcolor=${10}
thisweek=$(sdate thisweek)

#年ID
# year=$(awk '$1=="'${kikan}'"{print $3}' ${lv4d}/KISETU/MASTER/COMMON/MST_KIKAN)
year=$(date +%Y)
#AW/SS取得
kisetuid=$(awk '$1=="'${kikan}'"{print $4}' ${lv4d}/KISETU/MASTER/COMMON/MST_KIKAN)
kisetuname=$(awk '$1=="'${kikan}'"{print $4=="1"?"SS":"AW"}' ${lv4d}/KISETU/MASTER/COMMON/MST_KIKAN)

yearid=$(awk '$1=="'${kikan}'"{print $3}' ${lv4d}/KISETU/MASTER/COMMON/MST_KIKAN)

#該当期間の終了日付
if [ ${kisetuname} == "SS" ];then
  endhiduke=${yearid}"1130"
  nexthiduke=${yearid}"1201"
else
  endhiduke=$[${yearid}+1]"0531"
  nexthiduke=$[${yearid}+1]"0601"
fi

# 同じ週の場合、前週を使う
week_one=$(sdate -w ${endhiduke}d)
week_two=$(sdate -w ${nexthiduke}d)

if [ ${week_one} == ${week_two} ];then
  endweek=$(sdate ${week_two}w/-1w)
else
  endweek=${week_one}
fi

# エラー時の終了処理定義
ERROR_EXIT(){
  exit 1
}

#/////////////////////////////////////////////////////////////////////////
# 処理部分
#/////////////////////////////////////////////////////////////////////////

echo ${lv4d}/KISETU/DATA/${kisetuname}/${year}/${year}*                |
tov                                                                    |
awk '$1!="'${lv4d}'/KISETU/DATA/'${kisetuname}'/'${year}'/'${year}'*"' |
awk '{print $1,substr($1,length($1)-5)}'                               |
awk '$2<="'${endweek}'"{print $1}'                                     > $tmp-filelist
[ $(errchk ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT

if [ -s $tmp-filelist ];then
  lstfile=$(tail -n1 $tmp-filelist)
  thisweek=$(basename ${lstfile})
else
  exit 0
fi

# 季節画面帳票表示
if [ -s ${lv4d}/KISETU/DATA/${kisetuname}/${year}/${thisweek}/CHOUHYO_SHOW ];then
  # 1:季節名 2:部門名 3:カテゴリ名 4:サブカテゴリ名 5:セグメント名 6:サブセグメント名 7:JAN 8:商品名 9:商談者CD 10:商談者名 
  #11:商談契約数 12:初期売価 13:ベンダーCD 14:ベンダー名 15:ベンダー納期 16:原価 17:売価 18:昨年契約残 19:今年契約数 20:契約数合計
  #21:契約残 22:現在在庫 23:消化日数 24:先週売数 25:先週まで計画数 26:先週まで売数 27:全体消化率 28:先週まで消化率 29:昨年実績合計 30:今年実績合計
  #31:地域別センター在庫 ...

  #マスタ季節取得
  hejoin -k1 <(echo ${kisetuid}) ${lv4d}/KISETU/MASTER/COMMON/MST_KISETUTYPE_TBLKISETU |
  # 1.季節タイプ(1:SS/2:AW) 2.季節区分ID 3.TBL季節タイプID
  hejoin -k2 ${kisetufile}                                                             |
  # 1.季節タイプ(1:SS/2:AW) 2.季節区分ID 3.TBL季節タイプID
  kuniq -k3                                                                            > $tmp-tblkisetuid
  [ $(errchk ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT

  kuniq -k7 ${lv4d}/KISETU/DATA/${kisetuname}/${year}/${thisweek}/CHOUHYO_SHOW    |
  # 1.JAN 
  hejoin -k1 - ${tbld}/JAN_KISETU                                     |
  # 1.JAN 2.季節CD
  hejoin -k2 $tmp-tblkisetuid                                         |
  # 1.JAN 2.季節CD
  hejoin -k7 - ${lv4d}/KISETU/DATA/${kisetuname}/${year}/${thisweek}/CHOUHYO_SHOW > $tmp-show_data
  # 1:季節名 2:部門名 3:カテゴリ名 4:サブカテゴリ名 5:セグメント名 6:サブセグメント名 7:JAN 8:商品名 9:商談者CD 10:商談者名 
  #11:商談契約数 12:初期売価 13:ベンダーCD 14:ベンダー名 15:ベンダー納期 16:原価 17:売価 18:昨年契約残 19:今年契約数 20:契約数合計
  #21:契約残 22:現在在庫 23:消化日数 24:先週売数 25:先週まで計画数 26:先週まで売数 27:全体消化率 28:先週まで消化率 
  #29:昨年実績合計 30:今年実績合計 31:地域別センター在庫 ...
  [ $(errchk ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT
  
  # JANと階層条件のとき
  if [ -s ${janfile} ];then
    hejoin -k7 ${janfile} $tmp-show_data > $tmp-jan_result
    [ $? -eq 0 ] || ERROR_EXIT
  else
    cp $tmp-show_data $tmp-jan_result
    [ $? -eq 0 ] || ERROR_EXIT
  fi

  # 商談者条件のとき
  if [ -s ${stodansya} ];then
    hejoin -k9 ${stodansya} $tmp-jan_result > $tmp-syodan_result
    [ $? -eq 0 ] || ERROR_EXIT
  else
    cp $tmp-jan_result $tmp-syodan_result
    [ $? -eq 0 ] || ERROR_EXIT
  fi
else
  :> $tmp-syodan_result
fi

#データ列数
datacnt=$(colc $tmp-syodan_result)

seq 1 ${datacnt}      |
# 1.列ヘッダー
awk '{print "F"$1}'   |
# 1.列ヘッダー
toh                   > $tmp-datahead
[ $(errchk ${PIPESTATUS[@]}) -ne 0 ] && ERROR_EXIT

#データ列戻る
cat $tmp-datahead > ${colname}
[ $? -eq 0 ] || ERROR_EXIT

#データ戻る
selcol -c7 -c9 -c13 -c1,NF $tmp-syodan_result                 |
fmtfloat -c1,3                                                |
awk '{print $1=="0"?"_":$1,$2=="0"?"_":$2,$1=="0"?"_":$3,$0}' |
selcol -c7,12 -c1 -c14 -c2 -c16,18 -c3 -c20,NF                |
cat $tmp-datahead -
[ $(errchk ${PIPESTATUS[@]}) -ne 0 ] && ERROR_EXIT

weekcnt=$(rowc ${lv4d}/KISETU/DATA/${kisetuname}/${year}/${thisweek}/WEEK_INFO)
seq 1  ${weekcnt}   |
awk '{print "実績"}' |
toh                 > $tmp-jiseki_name
[ $(errchk ${PIPESTATUS[@]}) -ne 0 ] && ERROR_EXIT

# ヘッダーデータ作成
cat << FIN >> $tmp-head_one
季節名 部門名 カテゴリ名 サブカテゴリ名 セグメント名 サブセグメント名 JAN 商品名 商談者CD 商談者名 商談契約数 初期売価 ベンダーCD ベンダー名 ベンダー納期 原価 売価 昨年契約残 今年契約数 契約数合計 契約残 現在在庫 消化日数 先週売数 先週まで計画数 先週まで売数 全体消化率 先週まで消化率 昨年実績合計 今年実績合計
FIN

selcol -c2 ${lv4d}/KISETU/DATA/${kisetuname}/${year}/${thisweek}/SISYA_INFO |
# 支社名
toh                                                             |
hcat $tmp-head_one - $tmp-jiseki_name                           > ${headname}
[ $(errchk ${PIPESTATUS[@]}) -ne 0 ] && ERROR_EXIT

sisyacnt=$(rowc ${lv4d}/KISETU/DATA/${kisetuname}/${year}/${thisweek}/SISYA_INFO)

seq 1 ${sisyacnt}                |
tov                              |
crossjoin - <(echo センター在庫) |
selcol -c2                       > $tmp-centername
[ $(errchk ${PIPESTATUS[@]}) -ne 0 ] && ERROR_EXIT

# 30 + x null
seq 1 30                    |
tov                         |
awk '{print "null"}'        |
cat - $tmp-centername       |
toh                         > $tmp-merge_text_part1
[ $(errchk ${PIPESTATUS[@]}) -ne 0 ] && ERROR_EXIT

echo '{"F31":"'${sisyacnt}'"}' > ${centerhead}

cat ${lv4d}/KISETU/DATA/${kisetuname}/${year}/${thisweek}/WEEK_INFO |
# 1.年週
substr -c1.5.2                                          |
# 1,週
awk '{print $1"W"}'                                     |
# 1.週W
toh                                                     |
hcat $tmp-merge_text_part1 -                            |
cat $tmp-datahead -                                     > ${merge_text}
[ $(errchk ${PIPESTATUS[@]}) -ne 0 ] && ERROR_EXIT


#値下げの場合、画面のセルは赤色を付ける
if [ -e ${lv4d}/KISETU/BAIHEN_DISCOUNT/DISCOUNTPRICE ];then
    kuniq -k7 $tmp-syodan_result |
    # 1.JAN
    crossjoin - ${lv4d}/KISETU/DATA/${kisetuname}/${year}/${thisweek}/WEEK_INFO |
    # 1.JAN 2.週CD
    hijoin -k1,2 - ${lv4d}/KISETU/BAIHEN_DISCOUNT/DISCOUNTPRICE     |
    # 1.JAN 2.週CD
    #hejoin -k3 <(echo 1)                                            |
    kuniq -k1,2                                                     > $tmp-discount_data
    # 1.JAN 2.週CD
    [ $(errchk ${PIPESTATUS[@]}) -ne 0 ] && ERROR_EXIT
else
    :> $tmp-discount_data
fi

datacol_cnt=$[$(colc $tmp-syodan_result)-1]
datacol_cnt=7
insseq $tmp-syodan_result                                   |
scalc '$1-1'                                                |
awk '$1%2==0{print $1,"0",$1,"'${datacol_cnt}'","#F0F8FF"}' |
cat <(echo "r1 c1 r2 c2 color") -                           > ${bgcolor}
[ $(errchk ${PIPESTATUS[@]}) -ne 0 ] && ERROR_EXIT

if [ -s $tmp-discount_data ];then
  kuniq -k7 $tmp-syodan_result |
  # 1.JAN 
  insseq                       |
  # 1.順番 2.JAN
  scalc '$2,$1-1'              > $tmp-jan_num
  # 1.JAN 2.行番号
  [ $(errchk ${PIPESTATUS[@]}) -ne 0 ] && ERROR_EXIT
  
  startcol=$[$(rowc ${lv4d}/KISETU/DATA/${kisetuname}/${year}/${thisweek}/SISYA_INFO) + 29] 
  cat ${lv4d}/KISETU/DATA/${kisetuname}/${year}/${thisweek}/WEEK_INFO |
  # 1.週CD
  insseq                                                              |
  #1.順番 2.週CD
  scalc '$2,$1+'${startcol}                                           > $tmp-week_num
  # 1.週CD 2.列番号
  [ $(errchk ${PIPESTATUS[@]}) -ne 0 ] && ERROR_EXIT
  
  hijoin -k1 $tmp-jan_num $tmp-discount_data |
  # 1.JAN 2.行番号 3.週CD 
  hijoin -k3 $tmp-week_num -                 |              
  # 1.JAN 2.行番号 3.週CD 4.列番号
  tee $tmp-discnt_one                        |
  awk '{print $2,$4,$2,$4,"red"}'            >> ${bgcolor}
  #cat <(echo "r1 c1 r2 c2 color") -          > ${bgcolor}
  [ $(errchk ${PIPESTATUS[@]}) -ne 0 ] && ERROR_EXIT
else
  echo "true" >/dev/null
  :> $tmp-discnt_one
fi

#契約残マイナスカラー対応
insseq $tmp-syodan_result                |
scalc '$1-1,$22'                         |
awk '$2<0{print $1,"20",$1,"20","red"}'  > $tmp-keiyakuzan_color
[ $(errchk ${PIPESTATUS[@]}) -ne 0 ] && ERROR_EXIT

if [ -s $tmp-keiyakuzan_color ];then
  echo "r1 c1 r2 c2 color"    |
  cat - $tmp-keiyakuzan_color >> ${textcolor}
  [ $(errchk ${PIPESTATUS[@]}) -ne 0 ] && ERROR_EXIT

  if [ -s $tmp-discnt_one ];then
    awk '{print $2,$4,$2,$4,"white"}' $tmp-discnt_one >> ${textcolor}
    [ $? -eq 0 ] || ERROR_EXIT
  else
    echo "true" >/dev/null
  fi
else
  if [ -s $tmp-discnt_one ];then
    awk '{print $2,$4,$2,$4,"white"}' $tmp-discnt_one |
    cat <(echo "r1 c1 r2 c2 color") -                 > ${textcolor}
    [ $(errchk ${PIPESTATUS[@]}) -ne 0 ] && ERROR_EXIT
  else
    echo "true" >/dev/null
  fi
  echo "true" >/dev/null
fi

#////////////////////////////////////////////////////////////////////////
# 終了部分
#/////////////////////////////////////////////////////////////////////////
# 終了
rm -rf $tmp-* &>/dev/null
exit 0
