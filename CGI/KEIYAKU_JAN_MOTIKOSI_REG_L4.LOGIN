#!/bin/bash -xv
#
# KEIYAKU_JAN_MOTIKOSI_REG_L4.LOGIN>>> 持越し数メンテ情報登録
# Usage : KEIYAKU_JAN_MOTIKOSI_REG_L4.LOGIN
#
# Written by Zhang.Yunfeng(TRE・CHINA)  /Date : 2 Dec. 2019

#/////////////////////////////////////////////////////////////////////////
# 初期設定
#/////////////////////////////////////////////////////////////////////////

# 環境変数設定
export PATH=/home/SMART:/home/SMART_TRIAL:/usr/local/bin:${PATH}
export LANG=ja_JP.UTF-8

## ログディレクトリの定義
cgishld=/home/trial/AP/SOFT_CHOUHYOU
logd=${cgishld}/LOG

##走行ログの記録
echo "${logd}/LOG.$(basename $0).$(date +%Y%m%d)_$(date +%H%M%S)_$$" &>/dev/null
exec 2>${logd}/LOG.$(basename $0).$(date +%Y%m%d)_$(date +%H%M%S)_$$

# ディレクトリ定義
dir=/home/trial
lv4d=${dir}/APDATA/SOFT_CHOUHYOU/POMPA

tmp=/tmp/$$-$(basename $0)_$(date +%Y%m%d)_$(date +%H%M%S)
stime=$(date +%Y%m%d%H%M%S)
sday=$(date +%Y%m%d)

# エラー時の終了処理定義
ERROR_EXIT(){
  exit 1
}

[ $# -eq 3 ] || ERROR_EXIT

usercd=$1
datafile=$2
kikan=$3

#年ID
year=$(date +%Y)

#AW/SS取得
kisetuid=$(awk '$1=="'${kikan}'"{print $4}' ${lv4d}/KISETU/MASTER/COMMON/MST_KIKAN)
kisetuname=$(awk '$1=="'${kikan}'"{print $4=="1"?"SS":"AW"}' ${lv4d}/KISETU/MASTER/COMMON/MST_KIKAN)

mkdir -p ${lv4d}/KISETU/DATA/${kisetuname}/${year}
[ $? -eq 0 ] || ERROR_EXIT

#持越しメンテ数
touch ${lv4d}/KISETU/DATA/${kisetuname}/${year}/QTY_MINTE_MOTIKOSI
[ $? -eq 0 ] || ERROR_EXIT

#修正持越数対応
# 1:JAN 2:持越しメンテ数
fmtfixed -w20 -c1 ${datafile}                                    |       
# 1:JAN 2:持越しメンテ数
ssort -k1                                                        > $tmp-inputdata
[ $(errchk ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT

hejoin -v -k2 <(echo "_") $tmp-inputdata                         |
# 1:JAN 2:持越しメンテ数
fmtfloat -c2                                                     |
ssort -k1                                                        |
tee $tmp-motikosisu                                              |
# 1:JAN 2:持越しメンテ数
hejoin -a -k1 - ${lv4d}/KISETU/DATA/${kisetuname}/${year}/QTY_MINTE_MOTIKOSI 1> $tmp-update_data_one 2>$tmp-origin_data  
# 1:JAN 2:持越しメンテ数 3:登録者 4:登録日時 5:更新者 6:更新日時
[ $(errchk ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT

hijoin -a -k1 $tmp-update_data_one $tmp-motikosisu  1>$tmp-updata_data_two  2>$tmp-new_data_one 
# $tmp-updata_data_two 1:JAN 2:旧持越し数 3:登録者 4:登録日時 5:更新者 6:更新日時 7:新持越し数
# $tmp-new_data_one    1:JAN 2:更新持越し数
[ $(errchk ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT

crossjoin $tmp-new_data_one <(echo ${usercd} ${stime} ${usercd} ${stime}) >$tmp-new_data 
# 1:JAN 2:更新持越し数 3:登録者 4:登録日時 5:更新者 6:更新日時 
[ $? -eq 0 ] || ERROR_EXIT

selcol -c1 -c7 -c3,4 $tmp-updata_data_two                             |
# 1:JAN 2:更新持越し数 3:登録者 4:登録日時
crossjoin - <(echo ${usercd} ${stime})                                |
# 1:JAN 2:更新持越し数 3:登録者 4:登録日時 5:更新者 6:更新日時
cat - $tmp-origin_data                                                |
# 1:JAN 2:持越し数  3:登録者 4:登録日時 5:更新者 6:更新日時
cat - $tmp-new_data                                                   |
# 1:JAN 2:持越し数  3:登録者 4:登録日時 5:更新者 6:更新日時
hejoin -v -k1 <(awk '$2=="_"' $tmp-inputdata|kuniq -k1)               |
ssort -k1                                                             >$tmp-motikosi_update
# 1:JAN 2:持越し数 3:登録者 4:登録日時 5:更新者 6:更新日時
[ $(errchk ${PIPESTATUS[@]}) -eq 0 ] || ERROR_EXIT

# 履歴保存
hisd=${lv4d}/HISTORY/${usercd}/${sday}
mkdir -p ${hisd}
[ $? -eq 0 ] || ERROR_EXIT

cp ${lv4d}/KISETU/DATA/${kisetuname}/${year}/QTY_MINTE_MOTIKOSI ${hisd}/QTY_MINTE_MOTIKOSI${stime}
[ $? -eq 0 ] || ERROR_EXIT

#最新ファイル作成
cat $tmp-motikosi_update    >${lv4d}/KISETU/DATA/${kisetuname}/${year}/QTY_MINTE_MOTIKOSI
[ $? -eq 0 ] || ERROR_EXIT

#/////////////////////////////////////////////////////////////////////////
# 終了部分
#/////////////////////////////////////////////////////////////////////////

# 終了

#rm -rf $tmp-*

exit 0
